apply plugin: "dev.architectury.loom"

configurations {
    zip.exclude group: "net.fabricmc", module: "fabric-loader"
    productionRuntime
}

dependencies {
    zip implementation(project(path: ":loader-common", configuration: "default"))

    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

    include modLocalRuntime("me.mrnavastar.protoweaver:fabric:${project.protoweaver_version}")

    // Dev
    modLocalRuntime "maven.modrinth:easy-eula:1.1.1-forge"
    modLocalRuntime "maven.modrinth:fabricproxy-lite:${project.proxy_lite_version}"
    modLocalRuntime "com.moandjiezana.toml:toml4j:${project.toml4j_version}"

    productionRuntime "net.fabricmc:fabric-installer:1.0.1:server"
}

jar {
    from {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        configurations.zip.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
jar.finalizedBy(remapJar)

tasks.register('serverPropertiesJar', Jar) {
    def propsFile = file("build/tmp/install.properties")

    doFirst {
        propsFile.text = """\
						fabric-loader-version=${project.loader_version}
						game-version=${project.minecraft_version}
						""".stripMargin().stripIndent()
    }

    archiveFileName = "test-server-properties.jar"
    destinationDirectory = file("build/tmp")
    from(propsFile)
}

tasks.register('runProductionServer', JavaExec) {
    dependsOn remapJar, jar, serverPropertiesJar
    classpath.from configurations.productionRuntime, serverPropertiesJar
    mainClass = "net.fabricmc.installer.ServerLauncher"
    workingDir = file("run")

    doFirst {
        workingDir.mkdirs()

        jvmArgs(
                "-Dfabric.addMods=${remapJar.archiveFile.get().asFile.absolutePath}${File.pathSeparator}${jar.archiveFile.get().asFile.absolutePath}",
                "-Dfabric.autoTest",
        )

        args("nogui")
    }
}